<?php

namespace App\Controllers\WS;

use Conveyor\Actions\BaseAction;
use Conveyor\Actions\BroadcastAction;

//class SecondaryBroadcastAction extends BaseAction
class SecondaryBroadcastAction extends BroadcastAction
{
    const ACTION_NAME = 'secondary-broadcast-action';
    protected string $name = self::ACTION_NAME;

    protected function broadcastToChannel(string $data, ?array $listeners = null): void
    {
//        parent::broadcastToChannel($data, $listeners); // TODO: Change the autogenerated stub
        $connections = array_filter($this->channelPersistence->getAllConnections(), function ($connection) {
            return $connection === $this->getCurrentChannel();
        });
        $isSend = false;
        foreach ($connections as $fd => $channel) {
            $isOnlyListeningOtherActions = null === $listeners
                && $this->isListeningAnyAction($fd);
            $isNotListeningThisAction = null !== $listeners
                && !in_array($fd, $listeners);

            if (
                !$this->server->isEstablished($fd)
                // || $fd === $this->fd//Overwrite parent method in order to send also for the current user
                || $isNotListeningThisAction
                || $isOnlyListeningOtherActions
            ) {
                continue;
            }
            $isSend = true;
            error_log('SecondaryBroadcastAction: ' . $data);
            $this->server->push($fd, $data);
        }
        error_log('SecondaryBroadcastAction_$isSend: ' .$isSend);
    }
}